
@{
    ViewBag.Title = "Edit";
    Layout = "~/Views/Shared/_Layout.cshtml";
}


@model DemoThuctapTotNghiep.Models.ModeKhachHang
<head>

    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <!-- Main CSS-->
    <link rel="stylesheet" type="text/css" href="~/doc/css/main.css">
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/boxicons@latest/css/boxicons.min.css">
    <!-- or -->
    <link rel="stylesheet" href="https://unpkg.com/boxicons@latest/css/boxicons.min.css">
    <!-- Font-icon css-->
    <link rel="stylesheet" type="text/css"
          href="https://maxcdn.bootstrapcdn.com/font-awesome/4.7.0/css/font-awesome.min.css">
    <script src="https://cdnjs.cloudflare.com/ajax/libs/sweetalert/2.1.2/sweetalert.min.js"></script>
    <link rel="stylesheet" href="https://use.fontawesome.com/releases/v5.8.2/css/all.css">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/jquery-confirm/3.3.2/jquery-confirm.min.css">
    <script>
        var loadFile = function (event) {
            var output = document.getElementById('output');
            output.src = URL.createObjectURL(event.target.files[0]);
            output.onload = function () {
                URL.revokeObjectURL(output.src) // free memory
            }
        };
    </script>
</head>

<div class="row">
    <div class="col-md-12">

        <div class="tile">

            <h3 class="tile-title">Sửa thông tin </h3>
            <div class="tile-body">

                @using (Html.BeginForm("Edit", "KhachHang", "post"))
                {
                    @Html.AntiForgeryToken()

                    <div class="form-horizontal">

                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                        <div class="form-group">
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.Usename, new { htmlAttributes = new { @class = "form-control", @type = "hidden" } })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.pass, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.pass, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.pass, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            <label class="control-label">Họ và tên </label>                            <div class="col-md-10">
                                @Html.EditorFor(model => model.HoTen, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.HoTen, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            <label class="control-label">Địa chỉ </label>                            <div class="col-md-10">
                                @Html.DropDownListFor(model => model.DiaChi, ViewBag.DiaChiList as SelectList, "--Chọn địa chỉ--", new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.DiaChi, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            <label class="control-label">Ngày sinh </label>                            <div class="col-md-10">
                                @Html.EditorFor(model => model.NgaySinh, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.NgaySinh, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            <label class="control-label">Số điện thoại</label>                            <div class="col-md-10">
                                @Html.EditorFor(model => model.SDT, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.SDT, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            <label class="control-label">Số chứng minh nhân dân </label>                            <div class="col-md-10">
                                @Html.EditorFor(model => model.SoCMND, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.SoCMND, "", new { @class = "text-danger" })
                            </div>
                        </div>


                        <div class="form-group">
                            <label class="control-label">Nới cấp số chứng minh nhân dân </label>                            <div class="col-md-10">
                                @Html.DropDownListFor(model => model.NoiCap, ViewBag.NoiCapList as SelectList, "--Chọn nơi cấp--", new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.NoiCap, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            <label class="control-label">Giới tính </label>                            <div class="col-md-10">
                                @Html.DropDownListFor(model => model.GioiTinh, ViewBag.GioiTinhList as SelectList, "--Chọn giới tính--", new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.GioiTinh, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div>
                            <input type="submit" value="Lưu" class="btn btn-save" />
                            <a class="btn btn-cancel" href="/Home/Index">Hủy bỏ</a>

                        </div>
                    </div>


                }
            </div>


        </div>

    </div>
</div>

<script src="js/jquery-3.2.1.min.js"></script>
<!--===============================================================================================-->
<script src="js/popper.min.js"></script>
<script src="https://unpkg.com/boxicons@latest/dist/boxicons.js"></script>
<!--===============================================================================================-->
<script src="js/bootstrap.min.js"></script>
<!--===============================================================================================-->
<script src="js/main.js"></script>
<!--===============================================================================================-->
<script src="js/plugins/pace.min.js"></script>
<!--===============================================================================================-->
<script type="text/javascript" src="js/plugins/chart.js"></script>
<!--===============================================================================================-->
<script type="text/javascript">